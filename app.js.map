{"version":3,"file":"app.js","mappings":"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","sources":["webpack://yeppyshiba.com/webpack/runtime/chunk loaded","webpack://yeppyshiba.com/./src/app.ts","webpack://yeppyshiba.com/./src/enums/Animation.ts","webpack://yeppyshiba.com/./src/enums/Asset.ts","webpack://yeppyshiba.com/./src/enums/Scene.ts","webpack://yeppyshiba.com/./src/enums/index.ts","webpack://yeppyshiba.com/./src/pipelines/PicoCRT.ts","webpack://yeppyshiba.com/./src/pipelines/index.ts","webpack://yeppyshiba.com/./src/properties/AssetQueue.ts","webpack://yeppyshiba.com/./src/properties/index.ts","webpack://yeppyshiba.com/./src/scenes/LoaderScene.ts","webpack://yeppyshiba.com/./src/scenes/MainScene.ts","webpack://yeppyshiba.com/./src/scenes/index.ts","webpack://yeppyshiba.com/webpack/bootstrap","webpack://yeppyshiba.com/webpack/runtime/hasOwnProperty shorthand","webpack://yeppyshiba.com/webpack/runtime/jsonp chunk loading","webpack://yeppyshiba.com/webpack/startup"],"sourcesContent":["var deferred = [];\n__webpack_require__.O = (result, chunkIds, fn, priority) => {\n\tif(chunkIds) {\n\t\tpriority = priority || 0;\n\t\tfor(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];\n\t\tdeferred[i] = [chunkIds, fn, priority];\n\t\treturn;\n\t}\n\tvar notFulfilled = Infinity;\n\tfor (var i = 0; i < deferred.length; i++) {\n\t\tvar [chunkIds, fn, priority] = deferred[i];\n\t\tvar fulfilled = true;\n\t\tfor (var j = 0; j < chunkIds.length; j++) {\n\t\t\tif ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every((key) => (__webpack_require__.O[key](chunkIds[j])))) {\n\t\t\t\tchunkIds.splice(j--, 1);\n\t\t\t} else {\n\t\t\t\tfulfilled = false;\n\t\t\t\tif(priority < notFulfilled) notFulfilled = priority;\n\t\t\t}\n\t\t}\n\t\tif(fulfilled) {\n\t\t\tdeferred.splice(i--, 1)\n\t\t\tvar r = fn();\n\t\t\tif (r !== undefined) result = r;\n\t\t}\n\t}\n\treturn result;\n};","import 'phaser';\nimport { LoaderScene, MainScene } from '@/scenes';\nimport { PicoCRT } from '@/pipelines';\n\nclass Game extends Phaser.Game {\n    constructor() {\n        super(<Phaser.Types.Core.GameConfig>{\n            width: GAME_WIDTH,\n            height: GAME_HEIGHT,\n            type: Phaser.WEBGL,\n            parent: 'content',\n            physics: {\n                default: 'arcade',\n            },\n            scale: {\n                mode: Phaser.Scale.FIT,\n                autoCenter: Phaser.Scale.CENTER_BOTH\n            },\n            pipeline: {\n                PicoCRT\n            } as any,\n            scene: [\n                LoaderScene, \n                MainScene\n            ]\n        });\n    }\n}\n\nnew Game();","enum Animation {\n    SHIBA_WALK = 'shiba-walk'\n}\n\nexport default Animation;","enum Asset {\n    EIGHT_BIT_DETECTIVE = '8bit_detective',\n    BACK_BUILDINGS = 'back-builings',\n    FAR_BUILDINGS = 'far-builings',\n    FOREGROUND = 'foreground',\n    SHIBA = 'shiba'\n}\n\nexport default Asset;","enum Scene {\n    LOADER_SCENE = 'loader-scene',\n    MAIN_SCENE = 'main-scene'\n}\n\nexport default Scene;","export { default as Animation } from './Animation';\nexport { default as Asset } from './Asset';\nexport { default as Scene } from './Scene';","/*\nhttps://gist.github.com/morningtoast/bf1347b049280b655c939c8c0a52d261\n*/\n\nconst fragShader = `\nprecision mediump float;\n\nvarying vec2\t\toutTexCoord;\nuniform vec2\t\tu_canvasSize;\nuniform sampler2D\tu_texture;\n\n// PUBLIC DOMAIN CRT STYLED SCAN-LINE SHADER\n//   by Timothy Lottes\n// https://www.shadertoy.com/view/XsjSzR\n//   modified (borked) by ultrabrite\n\n// Emulated input resolution.\nconst vec2 texSize = vec2(160.0, 90.0);\n\n// Hardness of scanline.\n//  -8.0 = soft\n// -16.0 = medium\nfloat hardScan = -16.0;\n\n// Hardness of pixels in scanline.\n// -2.0 = soft\n// -4.0 = hard\nconst float hardPix = -4.0;\n\n// Hardness of shadow mask in scanline.\n// 0.5 = hard\n// 3.0 = soft\nconst float hardMask = 3.0;\n\nconst vec3 compos = vec3(1.0/6.0,1.0/2.0,5.0/6.0);\n\n// Display warp.\n// 0.0 = none\n// 1.0/8.0 = extreme\nconst vec2 warp=vec2(1.5 / 24.0, 1.5 /24.0);\n\n//------------------------------------------------------------------------\n\n// Nearest emulated sample given floating point position and texel offset.\n// Also zero's off screen.\nvec3 Fetch(vec2 pos,vec2 off)\n{\n    pos=floor(pos * texSize + off) / texSize;\n    if (pos.x<0.0 || pos.x>=1.0 || pos.y<0.0 || pos.y>=1.0)\n        return vec3(0.0,0.0,0.0);\n    return texture2D(u_texture,pos.xy).rgb;\n}\n\n// Distance in emulated pixels to nearest texel.\nvec2 Dist(vec2 pos)\n{\n    pos=pos * texSize;\n    return -((pos-floor(pos))-vec2(0.5));\n}\n\n// 1D Gaussian.\nfloat Gaus(float pos,float scale)\n{\n    return exp2(scale*pos*pos);\n}\n\n// 3-tap Gaussian filter along horz line.\nvec3 Horz3(vec2 pos,float off)\n{\n    mat3 m=mat3(Fetch(pos,vec2(-1.0,off)),\n                Fetch(pos,vec2( 0.0,off)),\n                Fetch(pos,vec2( 1.0,off)));\n    float dst=Dist(pos).x;\n    // Convert distance to weight.\n    vec3 v=vec3(Gaus(dst-1.0,hardPix),\n                Gaus(dst+0.0,hardPix),\n                Gaus(dst+1.0,hardPix));\n        // Return filtered sample.\n        return (m*v)/(v.x+v.y+v.z);\n}\n\n// 5-tap Gaussian filter along horz line.\nvec3 Horz5(vec2 pos,float off)\n{\n    vec3 a=Fetch(pos,vec2(-2.0,off));\n    vec3 b=Fetch(pos,vec2(-1.0,off));\n    vec3 c=Fetch(pos,vec2( 0.0,off));\n    vec3 d=Fetch(pos,vec2( 1.0,off));\n    vec3 e=Fetch(pos,vec2( 2.0,off));\n    float dstx=Dist(pos).x;\n    // Convert distance to weight.\n    float wa=Gaus(dstx-2.0,hardPix);\n    float wb=Gaus(dstx-1.0,hardPix);\n    float wc=Gaus(dstx+0.0,hardPix);\n    float wd=Gaus(dstx+1.0,hardPix);\n    float we=Gaus(dstx+2.0,hardPix);\n    // Return filtered sample.\n    return (a*wa+b*wb+c*wc+d*wd+e*we)/(wa+wb+wc+wd+we);\n}\n\n// Allow nearest three lines to effect pixel.\nvec3 Tri(vec2 pos)\n{\n    mat3 m=mat3(Horz3(pos,-1.0),\n                Horz5(pos, 0.0),\n                Horz3(pos, 1.0));\n    float dsty=Dist(pos).y;\n    vec3 v=vec3(Gaus(dsty-1.0,hardScan),\n                Gaus(dsty+0.0,hardScan),\n                Gaus(dsty+1.0,hardScan));\n    return m*v;\n}\n\n// Distortion of scanlines, and end of screen alpha.\nvec2 Warp(vec2 pos)\n{\n    pos=pos*2.0-1.0;\n    pos*=1.0+vec2(pos.y*pos.y,pos.x*pos.x)*warp;\n    return pos*0.5+0.5;\n}\n\nvec3 Mask(float x)\n{\n    vec3 v  = clamp((fract(x)-compos)*hardMask,-1.0/3.0,1.0/3.0);\n    return 2.0/3.0+abs(v);\n}\n\nvoid main()\n{\n    gl_FragColor.rgb = Tri(Warp(outTexCoord.xy))*Mask(outTexCoord.x*texSize.x);\n    //gl_FragColor.rgb = texture2D(u_texture,outTexCoord).rgb; // original\n    gl_FragColor.a = 1.0;\n}\n`;\n\nexport default class PicoCRT extends Phaser.Renderer.WebGL.Pipelines.PostFXPipeline {\n    constructor(game: Phaser.Game) {\n        super({\n            game,\n            name: 'PicoCRT',\n            renderTarget: true,\n            fragShader,\n        })\n    }\n}","export { default as PicoCRT } from './PicoCRT';","import { Asset } from '@/enums';\n\nexport type AssetQueueType = {\n    type: 'image' | 'audio' | 'spritesheet',\n    name: string,\n    path: string,\n    frameConfig?: Phaser.Types.Loader.FileTypes.ImageFrameConfig\n};\n\nexport default <AssetQueueType[]>[\n    {\n        type: 'image',\n        name: Asset.FAR_BUILDINGS,\n        path: 'assets/far-buildings.png'\n    },\n    {\n        type: 'image',\n        name: Asset.BACK_BUILDINGS,\n        path: 'assets/back-buildings.png'\n    },\n    {\n        type: 'image',\n        name: Asset.BACK_BUILDINGS,\n        path: 'assets/back-buildings.png'\n    },\n    {\n        type: 'image',\n        name: Asset.FOREGROUND,\n        path: 'assets/foreground.png'\n    },\n    {\n        type: 'spritesheet',\n        name: Asset.SHIBA,\n        path: 'assets/shiba.png',\n        frameConfig: {\n            frameWidth: 32, \n            frameHeight: 32\n        }\n    },\n    {\n        type: 'audio',\n        name: Asset.EIGHT_BIT_DETECTIVE,\n        path: 'assets/8bit_detective.mp3'\n    }\n];","export { default as AssetQueue } from './AssetQueue';\n\nexport type { AssetQueueType } from './AssetQueue';","import { Scene } from '@/enums';\nimport { AssetQueue } from '@/properties';\n\nexport default class LoaderScene extends Phaser.Scene {\n    constructor() {\n        super(Scene.LOADER_SCENE);\n    }\n\n    public preload(): void {\n        const width = 320;\n        const height = 50;\n\n        const progressBox = this.add.graphics();\n        progressBox.fillStyle(0x222222, 0.8);\n        progressBox.fillRect((GAME_WIDTH - width) / 2, (GAME_HEIGHT - height) / 2, width, height); // x,y, width, height: ;\n\n        const progressBar = this.add.graphics();\n\n        this.load.on('progress', (value: number) => {\n            progressBar.clear();\n            progressBar.fillStyle(0xffffff, 1);\n            progressBar.fillRect(((GAME_WIDTH - width) / 2) + 10, ((GAME_HEIGHT - height) / 2) + 10, (width - 20) * value, height - 20);\n        });\n\n        this.load.on('complete', () => {\n            this.scene.start(Scene.MAIN_SCENE);\n        });\n\n        AssetQueue.forEach(o => {\n            switch (o.type) {\n                case 'image':\n                    this.load.image(o.name, o.path);\n                    break;\n                case 'audio':\n                    this.load.audio(o.name, o.path);\n                    break;\n                case 'spritesheet':\n                    this.load.spritesheet(o.name, o.path, o.frameConfig);\n                    break;\n            }\n        });\n    }\n}","import { Animation, Asset, Scene } from '@/enums';\n\nexport default class MainScene extends Phaser.Scene {\n    private scrollSpeed = 1;\n    private backgroundFar?: Phaser.GameObjects.TileSprite;\n    private backgroundBack?: Phaser.GameObjects.TileSprite;\n    private backgroundForeground?: Phaser.GameObjects.TileSprite;\n\n    constructor() {\n        super(Scene.MAIN_SCENE);\n    }\n\n    public init(): void {}\n\n    public create(): void {\n        const width = this.scale.width;\n        const height = this.scale.height;\n        \n        // add far buildings\n        this.backgroundFar = this.add.tileSprite(0, 0, width, height, Asset.FAR_BUILDINGS)\n            .setScale(2);\n\n        // add back buildings\n        this.backgroundBack = this.add.tileSprite(0, -25, width, height, Asset.BACK_BUILDINGS)\n            .setScale(2);\n\n        // add forground\n        this.backgroundForeground = this.add.tileSprite(0, -45, width, height, Asset.FOREGROUND)\n            .setScale(2.25);\n\n        // add shiba animation\n        this.anims.create({\n            key: Animation.SHIBA_WALK,\n            frames: this.anims.generateFrameNumbers(Asset.SHIBA, { start: 4, end: 7, first: 4 }),\n            frameRate: 10,\n            repeat: -1\n        });\n\n        this.add.sprite(100, height - 55, Asset.SHIBA)\n            .play(Animation.SHIBA_WALK)\n            .setScale(4);\n\n        // add audio \n        this.sound.play(Asset.EIGHT_BIT_DETECTIVE);\n\n        // set camera pipeline\n        this.cameras.main.setPostPipeline('PicoCRT');\n    }\n\n    public update(): void {\n        if (this.backgroundFar) this.backgroundFar.tilePositionX += this.scrollSpeed / 8;\n        if (this.backgroundBack) this.backgroundBack.tilePositionX += this.scrollSpeed / 6;\n        if (this.backgroundForeground) this.backgroundForeground.tilePositionX += this.scrollSpeed / 4;\n    }\n}","export { default as LoaderScene } from './LoaderScene';\nexport { default as MainScene } from './MainScene';","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// no baseURI\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t143: 0\n};\n\n// no chunk on demand loading\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n__webpack_require__.O.j = (chunkId) => (installedChunks[chunkId] === 0);\n\n// install a JSONP callback for chunk loading\nvar webpackJsonpCallback = (parentChunkLoadingFunction, data) => {\n\tvar [chunkIds, moreModules, runtime] = data;\n\t// add \"moreModules\" to the modules object,\n\t// then flag all \"chunkIds\" as loaded and fire callback\n\tvar moduleId, chunkId, i = 0;\n\tif(chunkIds.some((id) => (installedChunks[id] !== 0))) {\n\t\tfor(moduleId in moreModules) {\n\t\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t\t}\n\t\t}\n\t\tif(runtime) var result = runtime(__webpack_require__);\n\t}\n\tif(parentChunkLoadingFunction) parentChunkLoadingFunction(data);\n\tfor(;i < chunkIds.length; i++) {\n\t\tchunkId = chunkIds[i];\n\t\tif(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {\n\t\t\tinstalledChunks[chunkId][0]();\n\t\t}\n\t\tinstalledChunks[chunkId] = 0;\n\t}\n\treturn __webpack_require__.O(result);\n}\n\nvar chunkLoadingGlobal = self[\"webpackChunkyeppyshiba_com\"] = self[\"webpackChunkyeppyshiba_com\"] || [];\nchunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));\nchunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));","// startup\n// Load entry module and return exports\n// This entry module depends on other loaded chunks and execution need to be delayed\nvar __webpack_exports__ = __webpack_require__.O(undefined, [216], () => (__webpack_require__(752)))\n__webpack_exports__ = __webpack_require__.O(__webpack_exports__);\n"],"names":["deferred","Game","Phaser","constructor","super","width","height","type","WEBGL","parent","physics","default","scale","mode","Scale","FIT","autoCenter","CENTER_BOTH","pipeline","PicoCRT","scene","LoaderScene","MainScene","Animation","Asset","Scene","Renderer","WebGL","Pipelines","PostFXPipeline","game","name","renderTarget","fragShader","FAR_BUILDINGS","path","BACK_BUILDINGS","FOREGROUND","SHIBA","frameConfig","frameWidth","frameHeight","EIGHT_BIT_DETECTIVE","LOADER_SCENE","preload","progressBox","this","add","graphics","fillStyle","fillRect","progressBar","load","on","value","clear","start","MAIN_SCENE","AssetQueue","forEach","o","image","audio","spritesheet","scrollSpeed","init","create","backgroundFar","tileSprite","setScale","backgroundBack","backgroundForeground","anims","key","SHIBA_WALK","frames","generateFrameNumbers","end","first","frameRate","repeat","sprite","play","sound","cameras","main","setPostPipeline","update","tilePositionX","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","undefined","exports","module","__webpack_modules__","call","m","O","result","chunkIds","fn","priority","notFulfilled","Infinity","i","length","fulfilled","j","Object","keys","every","splice","r","obj","prop","prototype","hasOwnProperty","installedChunks","chunkId","webpackJsonpCallback","parentChunkLoadingFunction","data","moreModules","runtime","some","id","chunkLoadingGlobal","self","bind","push","__webpack_exports__"],"sourceRoot":""}