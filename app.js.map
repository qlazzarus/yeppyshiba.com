{"version":3,"file":"app.js","mappings":"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","sources":["webpack://yeppyshiba.com/webpack/runtime/chunk loaded","webpack://yeppyshiba.com/./src/AnimationEnum.ts","webpack://yeppyshiba.com/./src/AssetEnum.ts","webpack://yeppyshiba.com/./src/MainScene.ts","webpack://yeppyshiba.com/./src/PicoCRT.ts","webpack://yeppyshiba.com/./src/app.ts","webpack://yeppyshiba.com/webpack/bootstrap","webpack://yeppyshiba.com/webpack/runtime/hasOwnProperty shorthand","webpack://yeppyshiba.com/webpack/runtime/jsonp chunk loading","webpack://yeppyshiba.com/webpack/startup"],"sourcesContent":["var deferred = [];\n__webpack_require__.O = (result, chunkIds, fn, priority) => {\n\tif(chunkIds) {\n\t\tpriority = priority || 0;\n\t\tfor(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];\n\t\tdeferred[i] = [chunkIds, fn, priority];\n\t\treturn;\n\t}\n\tvar notFulfilled = Infinity;\n\tfor (var i = 0; i < deferred.length; i++) {\n\t\tvar [chunkIds, fn, priority] = deferred[i];\n\t\tvar fulfilled = true;\n\t\tfor (var j = 0; j < chunkIds.length; j++) {\n\t\t\tif ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every((key) => (__webpack_require__.O[key](chunkIds[j])))) {\n\t\t\t\tchunkIds.splice(j--, 1);\n\t\t\t} else {\n\t\t\t\tfulfilled = false;\n\t\t\t\tif(priority < notFulfilled) notFulfilled = priority;\n\t\t\t}\n\t\t}\n\t\tif(fulfilled) {\n\t\t\tdeferred.splice(i--, 1)\n\t\t\tvar r = fn();\n\t\t\tif (r !== undefined) result = r;\n\t\t}\n\t}\n\treturn result;\n};","enum AnimationEnum {\n    SHIBA_WALK = 'shiba-walk'\n}\n\nexport default AnimationEnum;","enum AssetEnum {\n    EIGHT_BIT_DETECTIVE = '8bit_detective',\n    BACK_BUILDINGS = 'back-builings',\n    FAR_BUILDINGS = 'far-builings',\n    FOREGROUND = 'foreground',\n    SHIBA = 'shiba'\n}\n\nexport default AssetEnum;","import AnimationEnum from '@/AnimationEnum';\nimport AssetEnum from '@/AssetEnum';\n\nexport default class MainScene extends Phaser.Scene {\n    private scrollSpeed = 1;\n    private backgroundFar?: Phaser.GameObjects.TileSprite;\n    private backgroundBack?: Phaser.GameObjects.TileSprite;\n    private backgroundForeground?: Phaser.GameObjects.TileSprite;\n\n    constructor() {\n        super('main-scene');\n    }\n\n    public init(): void {}\n\n    public preload(): void {\n        this.load.image(AssetEnum.FAR_BUILDINGS, 'assets/far-buildings.png'); // first\n        this.load.image(AssetEnum.BACK_BUILDINGS, 'assets/back-buildings.png');\n        this.load.image(AssetEnum.FOREGROUND, 'assets/foreground.png');\n        this.load.spritesheet(AssetEnum.SHIBA, 'assets/shiba.png', { frameWidth: 32, frameHeight: 32 });\n        this.load.audio(AssetEnum.EIGHT_BIT_DETECTIVE, 'assets/8bit_detective.mp3');\n    }\n\n    public create(): void {\n        const width = this.scale.width;\n        const height = this.scale.height;\n        \n        // add far buildings\n        this.backgroundFar = this.add.tileSprite(0, 0, width, height, AssetEnum.FAR_BUILDINGS)\n            .setScale(2);\n\n        // add back buildings\n        this.backgroundBack = this.add.tileSprite(0, -25, width, height, AssetEnum.BACK_BUILDINGS)\n            .setScale(2);\n\n        // add forground\n        this.backgroundForeground = this.add.tileSprite(0, -45, width, height, AssetEnum.FOREGROUND)\n            .setScale(2.25);\n\n        // add shiba animation\n        this.anims.create({\n            key: AnimationEnum.SHIBA_WALK,\n            frames: this.anims.generateFrameNumbers(AssetEnum.SHIBA, { start: 4, end: 7, first: 4 }),\n            frameRate: 10,\n            repeat: -1\n        });\n\n        this.add.sprite(100, height - 55, AssetEnum.SHIBA)\n            .play(AnimationEnum.SHIBA_WALK)\n            .setScale(4);\n\n        // add audio \n        this.sound.play(AssetEnum.EIGHT_BIT_DETECTIVE);\n\n        // set camera pipeline\n        this.cameras.main.setPostPipeline('PicoCRT');\n    }\n\n    public update(): void {\n        if (this.backgroundFar) this.backgroundFar.tilePositionX += this.scrollSpeed / 8;\n        if (this.backgroundBack) this.backgroundBack.tilePositionX += this.scrollSpeed / 6;\n        if (this.backgroundForeground) this.backgroundForeground.tilePositionX += this.scrollSpeed / 4;\n    }\n}","/*\nhttps://gist.github.com/morningtoast/bf1347b049280b655c939c8c0a52d261\n*/\n\nconst fragShader = `\nprecision mediump float;\n\nvarying vec2\t\toutTexCoord;\nuniform vec2\t\tu_canvasSize;\nuniform sampler2D\tu_texture;\n\n// PUBLIC DOMAIN CRT STYLED SCAN-LINE SHADER\n//   by Timothy Lottes\n// https://www.shadertoy.com/view/XsjSzR\n//   modified (borked) by ultrabrite\n\n// Emulated input resolution.\nconst vec2 texSize = vec2(160.0, 90.0);\n\n// Hardness of scanline.\n//  -8.0 = soft\n// -16.0 = medium\nfloat hardScan = -16.0;\n\n// Hardness of pixels in scanline.\n// -2.0 = soft\n// -4.0 = hard\nconst float hardPix = -4.0;\n\n// Hardness of shadow mask in scanline.\n// 0.5 = hard\n// 3.0 = soft\nconst float hardMask = 3.0;\n\nconst vec3 compos = vec3(1.0/6.0,1.0/2.0,5.0/6.0);\n\n// Display warp.\n// 0.0 = none\n// 1.0/8.0 = extreme\nconst vec2 warp=vec2(1.5 / 24.0, 1.5 /24.0);\n\n//------------------------------------------------------------------------\n\n// Nearest emulated sample given floating point position and texel offset.\n// Also zero's off screen.\nvec3 Fetch(vec2 pos,vec2 off)\n{\n    pos=floor(pos * texSize + off) / texSize;\n    if (pos.x<0.0 || pos.x>=1.0 || pos.y<0.0 || pos.y>=1.0)\n        return vec3(0.0,0.0,0.0);\n    return texture2D(u_texture,pos.xy).rgb;\n}\n\n// Distance in emulated pixels to nearest texel.\nvec2 Dist(vec2 pos)\n{\n    pos=pos * texSize;\n    return -((pos-floor(pos))-vec2(0.5));\n}\n\n// 1D Gaussian.\nfloat Gaus(float pos,float scale)\n{\n    return exp2(scale*pos*pos);\n}\n\n// 3-tap Gaussian filter along horz line.\nvec3 Horz3(vec2 pos,float off)\n{\n    mat3 m=mat3(Fetch(pos,vec2(-1.0,off)),\n                Fetch(pos,vec2( 0.0,off)),\n                Fetch(pos,vec2( 1.0,off)));\n    float dst=Dist(pos).x;\n    // Convert distance to weight.\n    vec3 v=vec3(Gaus(dst-1.0,hardPix),\n                Gaus(dst+0.0,hardPix),\n                Gaus(dst+1.0,hardPix));\n        // Return filtered sample.\n        return (m*v)/(v.x+v.y+v.z);\n}\n\n// 5-tap Gaussian filter along horz line.\nvec3 Horz5(vec2 pos,float off)\n{\n    vec3 a=Fetch(pos,vec2(-2.0,off));\n    vec3 b=Fetch(pos,vec2(-1.0,off));\n    vec3 c=Fetch(pos,vec2( 0.0,off));\n    vec3 d=Fetch(pos,vec2( 1.0,off));\n    vec3 e=Fetch(pos,vec2( 2.0,off));\n    float dstx=Dist(pos).x;\n    // Convert distance to weight.\n    float wa=Gaus(dstx-2.0,hardPix);\n    float wb=Gaus(dstx-1.0,hardPix);\n    float wc=Gaus(dstx+0.0,hardPix);\n    float wd=Gaus(dstx+1.0,hardPix);\n    float we=Gaus(dstx+2.0,hardPix);\n    // Return filtered sample.\n    return (a*wa+b*wb+c*wc+d*wd+e*we)/(wa+wb+wc+wd+we);\n}\n\n// Allow nearest three lines to effect pixel.\nvec3 Tri(vec2 pos)\n{\n    mat3 m=mat3(Horz3(pos,-1.0),\n                Horz5(pos, 0.0),\n                Horz3(pos, 1.0));\n    float dsty=Dist(pos).y;\n    vec3 v=vec3(Gaus(dsty-1.0,hardScan),\n                Gaus(dsty+0.0,hardScan),\n                Gaus(dsty+1.0,hardScan));\n    return m*v;\n}\n\n// Distortion of scanlines, and end of screen alpha.\nvec2 Warp(vec2 pos)\n{\n    pos=pos*2.0-1.0;\n    pos*=1.0+vec2(pos.y*pos.y,pos.x*pos.x)*warp;\n    return pos*0.5+0.5;\n}\n\nvec3 Mask(float x)\n{\n    vec3 v  = clamp((fract(x)-compos)*hardMask,-1.0/3.0,1.0/3.0);\n    return 2.0/3.0+abs(v);\n}\n\nvoid main()\n{\n    gl_FragColor.rgb = Tri(Warp(outTexCoord.xy))*Mask(outTexCoord.x*texSize.x);\n    //gl_FragColor.rgb = texture2D(u_texture,outTexCoord).rgb; // original\n    gl_FragColor.a = 1.0;\n}\n`;\n\nexport default class PicoCRT extends Phaser.Renderer.WebGL.Pipelines.PostFXPipeline {\n    constructor(game: Phaser.Game) {\n        super({\n            game,\n            name: 'PicoCRT',\n            renderTarget: true,\n            fragShader,\n        })\n    }\n}","import 'phaser';\nimport MainScene from '@/MainScene';\nimport PicoCRT from '@/PicoCRT';\n\nnamespace yeppy {\n    export class Game extends Phaser.Game {\n        constructor() {\n            super(<Phaser.Types.Core.GameConfig>{\n                width: GAME_WIDTH,\n                height: GAME_HEIGHT,\n                type: Phaser.WEBGL,\n                parent: 'content',\n                /*\n                render: {\n                    pixelArt: true\n                },\n                */\n                /*\n                physics: {\n                    default: 'arcade',\n                },\n                */\n                scale: {\n                    mode: Phaser.Scale.FIT,\n                    autoCenter: Phaser.Scale.CENTER_BOTH\n                },\n                pipeline: {\n                    PicoCRT\n                } as any,\n                scene: MainScene,\n            });\n        }\n    }\n}\n\nnew yeppy.Game();","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// no baseURI\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t143: 0\n};\n\n// no chunk on demand loading\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n__webpack_require__.O.j = (chunkId) => (installedChunks[chunkId] === 0);\n\n// install a JSONP callback for chunk loading\nvar webpackJsonpCallback = (parentChunkLoadingFunction, data) => {\n\tvar [chunkIds, moreModules, runtime] = data;\n\t// add \"moreModules\" to the modules object,\n\t// then flag all \"chunkIds\" as loaded and fire callback\n\tvar moduleId, chunkId, i = 0;\n\tif(chunkIds.some((id) => (installedChunks[id] !== 0))) {\n\t\tfor(moduleId in moreModules) {\n\t\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t\t}\n\t\t}\n\t\tif(runtime) var result = runtime(__webpack_require__);\n\t}\n\tif(parentChunkLoadingFunction) parentChunkLoadingFunction(data);\n\tfor(;i < chunkIds.length; i++) {\n\t\tchunkId = chunkIds[i];\n\t\tif(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {\n\t\t\tinstalledChunks[chunkId][0]();\n\t\t}\n\t\tinstalledChunks[chunkId] = 0;\n\t}\n\treturn __webpack_require__.O(result);\n}\n\nvar chunkLoadingGlobal = self[\"webpackChunkyeppyshiba_com\"] = self[\"webpackChunkyeppyshiba_com\"] || [];\nchunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));\nchunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));","// startup\n// Load entry module and return exports\n// This entry module depends on other loaded chunks and execution need to be delayed\nvar __webpack_exports__ = __webpack_require__.O(undefined, [216], () => (__webpack_require__(752)))\n__webpack_exports__ = __webpack_require__.O(__webpack_exports__);\n"],"names":["deferred","AnimationEnum","AssetEnum","MainScene","Phaser","Scene","constructor","super","scrollSpeed","init","preload","this","load","image","FAR_BUILDINGS","BACK_BUILDINGS","FOREGROUND","spritesheet","SHIBA","frameWidth","frameHeight","audio","EIGHT_BIT_DETECTIVE","create","width","scale","height","backgroundFar","add","tileSprite","setScale","backgroundBack","backgroundForeground","anims","key","SHIBA_WALK","frames","generateFrameNumbers","start","end","first","frameRate","repeat","sprite","play","sound","cameras","main","setPostPipeline","update","tilePositionX","PicoCRT","Renderer","WebGL","Pipelines","PostFXPipeline","game","name","renderTarget","fragShader","yeppy","Game","type","WEBGL","parent","mode","Scale","FIT","autoCenter","CENTER_BOTH","pipeline","scene","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","undefined","exports","module","__webpack_modules__","call","m","O","result","chunkIds","fn","priority","notFulfilled","Infinity","i","length","fulfilled","j","Object","keys","every","splice","r","o","obj","prop","prototype","hasOwnProperty","installedChunks","chunkId","webpackJsonpCallback","parentChunkLoadingFunction","data","moreModules","runtime","some","id","chunkLoadingGlobal","self","forEach","bind","push","__webpack_exports__"],"sourceRoot":""}